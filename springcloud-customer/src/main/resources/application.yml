server:
  port: 80
  servlet:
    context-path: /
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      #指定默认zone（defaultZone）的注册中心（默认http://localhost:8761/eureka/），多个用逗号隔开
      defaultZone: http://localhost:7001/eureka/
    #更新服务清单的间隔时间，默认30秒
#    registry-fetch-interval-seconds: 30
    #更新service-url的间隔时间，当与SpringCloudConfig结合时可以实现动态刷新，默认300秒
#    eureka-service-url-poll-interval-seconds: 300
  instance:
    instance-id: ${spring.application.name}-${server.port}
    #状态页URL，若设置了context-path这里也要改
    health-check-url-path: ${server.servlet.context-path}actuator/health
    #健康检查页URL，若设置了context-path这里也要改
    status-page-url-path: ${server.servlet.context-path}actuator/info
    #服务名，默认spring.application.name，没有则为unknown
#    appname: hollshit
    #主机名，没有则获取操作系统的主机名
#    hostname: localhost


#ribbon指定服务配置
#helloservice:
#  ribbon:
#    #自定义ribbon的规则，默认轮询,helloservice是应用名，区分大小写
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

feign:
  hystrix:
    #开启服务熔断器
    enabled: true
  #feign客户端，可参考配置类FeignClientProperties
  client:
    config:
      #配置默认配置
      default:
        connect-timeout: 500
        read-timeout: 5000

#设置HelloService日志级别
logging:
  level:
    pwd:
      allen:
        service:
          HelloService: debug


hystrix:
  command:
    #配置默认的命令属性，可参考配置类HystrixCommandProperties
    default:
      execution:
        isolation:
          thread:
            #设置HystrixCommand执行的超时时间，超过该值Hystrix会将该执行命令标记为Timeout并进入服务降级处理逻辑，默认1000
            timeoutInMilliseconds: 5000

#引入spring-boot-starter-actuator后，注册到eureka的服务可以在euraka页面跳转到info页面
info:
  app: customer
  log: info信息
  application-name: ${spring.application.name}
  server.port: ${server.port}
  spring-cloud-client-hostname: ${spring.cloud.client.hostname}
  eureka.instance-hostname: ${eureka.instance.hostname}

spring:
  application:
    name: hellocustomer
  zipkin:     #链路追踪支持
    base-url: http://localhost:9411
  boot:
    admin:
      client:
        url: http://localhost:7005
  cloud:
    loadbalancer:
      retry:
        #开启负载均衡的重试机制
        enabled: true