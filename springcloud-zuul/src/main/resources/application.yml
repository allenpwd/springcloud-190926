server:
  port: 7003
  error:
    include-exception: true
spring:
  application:
    name: zuul-gateway
  zipkin:     #链路追踪支持
    base-url: http://localhost:9411
  boot:
      admin:
        client:
          url: http://localhost:7005
eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}-${server.port}
  client:
    service-url:
      defaultZone: http://localhost:7001/eureka/

info:
  app: zuul
  log: info信息
  application-name: ${spring.application.name}
  server.port: ${server.port}

zuul:
  #zuul与eureka整合后默认会为每个服务名自动创建{serviceId}/**的路由规则，可通过该属性设置忽略某些服务名的自动创建，如果要禁止所有应用名的使用可以设置为"*"
  ignored-services:
    - helloservice
  #设置不让网关来路由的URL表达式，url路径有一级目录为ignore则不进行路由
  ignored-patterns:
    - /**/ignore/**
  #设置公共前缀，注意前面要加/
  prefix: /api
  #全局设置不过滤请求头，这种方式不推荐
#  sensitiveHeaders:
  #设置路由映射，按照配置文件顺序加载，如果匹配多个path，最先匹配的优先
  routes:
    local:
      #匹配客户端请求的路径表达式
      path: /local/**
      #单实例配置方式，指定映射的具体实例地址，该方式不会使用Hystrix负载均衡，可参考过滤器SimpleHostRoutingFilter，例如 /local/hello转到http://localhost/hello
#      url: http://localhost/
      #多实例配置方式，指定映射的服务名，可参考过滤器RibbonRoutingFilter，这种面相服务的方式还有一种简写的映射方法 {serviceId}: {path}  例如 localRoute: /local/**
      serviceId: localRoute
    helloService:
      serviceId: helloservice
      path: /service/**
    helloCustomer:
      #局部设置不过滤请求头；zuul默认会过滤请求头的敏感信息，比如Cookie、Set-Cookie、Authorization（参考ZuulProperties的sensitiveHeaders），方式有以下两种
#      sensitiveHeaders:
      customSensitiveHeaders: true
      serviceId: helloCustomer
      path: /customer/**
    #将匹配的请求转发到本地的请求，可参考过滤器SendForwardFilter，例如：/forward/hello -> /localForward/hello（不用加上zuul.prefix），需要本地有该requestMapping实现，否则404
    forward:
      path: /forward/**
      url: forward:/localForward
  #网关在进行路由转发前为请求设置Host头信息，避免重定向到具体事例地址（参考PreDecorationFilter）
  add-host-header: true
  #为请求增加头域，比如X-Forwarded-For
  add-proxy-headers: true

#关闭服务发现功能
#ribbon:
#  eureka:
#    enabled: false
#人工指定serviceId对应的服务实例清单
localRoute:
  ribbon:
    listOfServers: http://localhost/

#处理zuul转发超时情况
hystrix:
  command:
    #配置默认的命令属性，可参考配置类HystrixCommandProperties
    default:
      execution:
        isolation:
          thread:
            #设置HystrixCommand执行的超时时间，超过该值Hystrix会将该执行命令标记为Timeout并进入服务降级处理逻辑，默认1000
            timeoutInMilliseconds: 5000
ribbon:
#  ConnectTimeout: 1000
  ReadTimeout: 2000